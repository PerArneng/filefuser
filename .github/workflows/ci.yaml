name: CI

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '00 01 * * *'

permissions:
  contents: read

jobs:
  build-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Native builds on supported OS's (tests are executed)
          - build: native-ubuntu
            os: ubuntu-latest
            rust: stable
            target: ""
          - build: native-macos
            os: macos-latest
            rust: stable
            target: ""
          - build: native-windows
            os: windows-2022
            rust: stable
            target: ""
          # Cross-compilation targets on Ubuntu (build only)
          - build: cross-musl
            os: ubuntu-latest
            rust: stable
            target: "x86_64-unknown-linux-musl"
          - build: cross-x86
            os: ubuntu-latest
            rust: stable
            target: "i686-unknown-linux-gnu"
          - build: cross-aarch64
            os: ubuntu-latest
            rust: stable
            target: "aarch64-unknown-linux-gnu"
          - build: cross-arm-gnueabihf
            os: ubuntu-latest
            rust: stable
            target: "armv7-unknown-linux-gnueabihf"
          - build: cross-arm-musleabihf
            os: ubuntu-latest
            rust: stable
            target: "armv7-unknown-linux-musleabihf"
          - build: cross-arm-musleabi
            os: ubuntu-latest
            rust: stable
            target: "armv7-unknown-linux-musleabi"
          - build: cross-powerpc64
            os: ubuntu-latest
            rust: stable
            target: "powerpc64-unknown-linux-gnu"
          - build: cross-s390x
            os: ubuntu-latest
            rust: stable
            target: "s390x-unknown-linux-gnu"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Add target if needed
        if: matrix.target != ''
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: |
          if [ -z "${{ matrix.target }}" ]; then
            cargo build --verbose
          else
            cargo build --verbose --target ${{ matrix.target }}
          fi

      - name: Run tests
        if: matrix.target == ''
        run: cargo test --verbose

  fmt:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain with rustfmt
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Verify formatting
        run: cargo fmt --all -- --check

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Build docs
        run: cargo doc --no-deps --document-private-items
